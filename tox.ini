[tox]
isolated_build = True
envlist = py312
requires = 
    tox-poetry>=0.5.0

[testenv]
allowlist_externals = poetry
skip_install = true
commands_pre =
    poetry install --no-root --sync
commands =
    poetry run python -c "import sys; sys.path.extend(['{toxinidir}/src', '{toxinidir}']); import pytest; pytest.main(['tests', '-v', '--tb=short', '--import-mode=importlib', '-n', 'auto', '--dist=loadscope'])"

[pytest]
# Test configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Test organization
markers =
    integration: marks tests as integration tests
    concurrent: marks tests that run concurrently

# Warning management
filterwarnings =
    # Asyncio configuration
    ignore:The configuration option "asyncio_default_fixture_loop_scope" is unset
    # External library warnings (can't fix directly)
    ignore:invalid escape sequence:SyntaxWarning
    ignore:The `schema` method is deprecated:DeprecationWarning
    ignore:Support for class-based `config` is deprecated:DeprecationWarning
    ignore:Pydantic V1 style.*validators are deprecated:DeprecationWarning
    ignore:open_text is deprecated:DeprecationWarning
    # Pydantic specific warnings
    ignore::pydantic.PydanticDeprecatedSince20
    ignore::DeprecationWarning:crewai.*:
    ignore::DeprecationWarning:litellm.*:

# Environment configuration
passenv = *
setenv =
    PYTHONPATH = {toxinidir}/src:{toxinidir}
    PYTHONWARNINGS = ignore
    DOTENV_PATH = {toxinidir}/.env

# Performance tuning
addopts = 
    -n auto
    --dist=loadscope
    --maxprocesses=auto
    --tb=short
    --showlocals
    --durations=10

[coverage:run]
source = src
omit = tests/*
parallel = True
concurrency = multiprocessing,thread

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
show_missing = True
skip_covered = True
